apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "user-service.fullname" . }}
  labels:
    {{- include "user-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "user-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "user-service.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DB_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ template "user-service.congigMapName" . }}
                  key: db-url
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "user-service.secretName" . }}
                  key: db-username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "user-service.secretName" . }}
                  key: db-password
          ports:
            - name: app
              containerPort: {{ .Values.service.port }}
          livenessProbe:
            httpGet:
              port: app
              path: /actuator/health/liveness
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          readinessProbe:
            httpGet:
              port: app
              path: /actuator/health/readiness
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3

